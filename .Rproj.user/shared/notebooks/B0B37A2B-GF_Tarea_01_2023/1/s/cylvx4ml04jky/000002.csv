"0","```r
library(igraph)
based<-read.csv(\"GF_Tarea_01_2023_files1/RedAmiguesPonderadaGF2023 - Hoja 1.tsv\",dec=\",\",sep=\"\t\")
based<- based[,-1] #eliminar la columna de nombre
rownames(based)<- colnames(based) #asignar los nombres de renglones a columnas
baselim <-based[-c(3,15,32),-c(3,15,32)] #eliminar los que no ontestaron, haciendola simetrica
baselim<- as.matrix(baselim) #pasarla a matrix
diag(baselim)<- 0 #eliminar valores en la diagonal
nopondecasa <- ifelse(baselim>=0.5,1,0) #poner el valor de la red, para hacerla no pesada
redcasa_noponde <- graph_from_adjacency_matrix(nopondecasa,mode= \"directed\")  #asignarla a un objeto de igraph
###################


maximostray <- function(base1){
  max1 <- vcount(base1)-1
  a<- 1
  b<-1
  direct <- get.adjacency(base1)
  direct
  
  for (i in 0:max1) {
    a<- a+1
    b<- b+1
  }
  for (k in 0:max1) {
  
    b<- b+1
  }
  
 redcasa_noponde[i,k]<- length(get.all.shortest.paths(base1,from=i, to= k, mode=\"out\"))
  print(paste0(\"el camino mÃ¡s largo es \", redcasa_noponde[i,k]))
  
  
}

maximostray(redcasa_noponde)
```"
